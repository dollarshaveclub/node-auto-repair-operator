// Code generated by mockery v1.0.0
package mocks

import mock "github.com/stretchr/testify/mock"
import naro "github.com/dollarshaveclub/node-auto-repair-operator/pkg/naro"

// AnomalyDetector is an autogenerated mock type for the AnomalyDetector type
type AnomalyDetector struct {
	mock.Mock
}

// IsAnomaly provides a mock function with given fields: ns
func (_m *AnomalyDetector) IsAnomaly(ns *naro.NodeTimePeriodSummary) (bool, error) {
	ret := _m.Called(ns)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*naro.NodeTimePeriodSummary) bool); ok {
		r0 = rf(ns)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*naro.NodeTimePeriodSummary) error); ok {
		r1 = rf(ns)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Train provides a mock function with given fields: summaries, done
func (_m *AnomalyDetector) Train(summaries <-chan *naro.NodeTimePeriodSummary, done chan<- struct{}) error {
	ret := _m.Called(summaries, done)

	var r0 error
	if rf, ok := ret.Get(0).(func(<-chan *naro.NodeTimePeriodSummary, chan<- struct{}) error); ok {
		r0 = rf(summaries, done)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
